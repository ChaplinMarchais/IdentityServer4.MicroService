@model LoginViewModel
@inject SignInManager<AppUser> SignInManager
@inject IViewLocalizer Localizer
<div class="ui centered grid">
    <div class="six wide column">
        <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="ui form">
            <h4>@Localizer["登录"]</h4>
            <div asp-validation-summary="All"></div>
            <div class="field">
                <h4>@Localizer["邮箱"]</h4>
                <div class="col-md-10">
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>
            <div class="field">
                <label>@Localizer["密码"]</label>
                <div class="col-md-10">
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>
            <div class="field">
                <div class="ui checkbox">
                    <input asp-for="RememberMe" />
                    <label>@Localizer["保存登录信息"]</label>
                </div>
                <a asp-action="ForgotPassword" style="float:right">@Localizer["忘记密码"]?</a>
            </div>
            <div class="field">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="positive ui button">@Localizer["登录"]</button>
                </div>
            </div>
        </form>

        @{
        var loginProviders = SignInManager.GetExternalAuthenticationSchemesAsync().Result.ToList();
        if (loginProviders.Count > 0)
        {
            <p>@Localizer["其他方式登录"]</p>
            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="loginProviders">

                @foreach (var provider in loginProviders)
            {
                var classMapping = provider.DisplayName.ToLower();
                var iconMapping = classMapping;
                if (classMapping.Equals("microsoft"))
                {
                    classMapping = "windows";
                    iconMapping = classMapping;
                }
               
                <button type="submit" class="ui circular @classMapping icon button basic" name="provider" value="@provider.DisplayName">
                    <i class="@iconMapping icon"></i> @provider.DisplayName
                </button>
        }
            </form>
    }
        }
    </div>
</div>
    @section Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }